# bot/handlers/start_handlers.py (–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ)
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command, CommandStart
from aiogram.utils.keyboard import InlineKeyboardBuilder

from bot.handlers.base import BaseHandler


class StartHandlers(BaseHandler):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å—Ç–∞—Ä—Ç–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥"""

    def _register_handlers(self):
        # –ö–æ–º–∞–Ω–¥—ã
        self.router.message.register(self.start_command, CommandStart())
        self.router.message.register(self.help_command, Command("help"))
        self.router.message.register(self.about_command, Command("about"))

        # Callback'–∏ –∏–∑ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –º–µ–Ω—é
        self.router.callback_query.register(self.new_product_callback, F.data == "new_product")
        self.router.callback_query.register(self.my_products_callback, F.data == "my_products")
        self.router.callback_query.register(self.help_callback, F.data == "help")

    async def start_command(self, message: Message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
        user_name = message.from_user.first_name

        builder = InlineKeyboardBuilder()
        builder.button(text="üÜï –°–æ–∑–¥–∞—Ç—å —Ç–æ–≤–∞—Ä", callback_data="new_product")
        builder.button(text="üìã –ú–æ–∏ —Ç–æ–≤–∞—Ä—ã", callback_data="my_products")
        builder.button(text="‚ùì –ü–æ–º–æ—â—å", callback_data="help")
        builder.adjust(1)

        welcome_text = (
            f"üëã –ü—Ä–∏–≤–µ—Ç, {user_name}!\n\n"
            "ü§ñ –Ø –±–æ—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–∞ Avito.\n\n"
            "üìã <b>–ß—Ç–æ —è —É–º–µ—é:</b>\n"
            "‚Ä¢ –°–æ–∑–¥–∞–≤–∞—Ç—å —Ç–æ–≤–∞—Ä—ã —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏\n"
            "‚Ä¢ –£–∫–∞–∑—ã–≤–∞—Ç—å —Ü–µ–Ω—ã –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏\n"
            "‚Ä¢ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É\n"
            "‚Ä¢ –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å XML –¥–ª—è Avito\n\n"
            "üöÄ <b>–ù–∞—á–Ω–∏—Ç–µ —Å —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞!</b>"
        )

        await message.answer(welcome_text, reply_markup=builder.as_markup())

    async def new_product_callback(self, callback: CallbackQuery):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–°–æ–∑–¥–∞—Ç—å —Ç–æ–≤–∞—Ä'"""
        from aiogram.fsm.context import FSMContext
        from bot.states import ProductStates
        from bot.services.product_service import ProductService

        # –ü–æ–ª—É—á–∞–µ–º FSM context (–Ω—É–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å –∏–∑–≤–Ω–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å middleware)
        # –í —Ä–µ–∞–ª—å–Ω–æ–º –∫–æ–¥–µ —ç—Ç–æ –¥–µ–ª–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ dependency injection
        await callback.message.edit_text("üÜï –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞...")

        # –ò–º–∏—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É /new_product
        await ProductService.show_main_categories(callback.message, callback.from_user.first_name)
        await callback.answer()

    async def my_products_callback(self, callback: CallbackQuery):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ú–æ–∏ —Ç–æ–≤–∞—Ä—ã'"""
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø–æ–∫–∞–∑–∞ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await callback.message.edit_text(
            "üìã <b>–ú–æ–∏ —Ç–æ–≤–∞—Ä—ã</b>\n\n"
            "–ó–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤—Å–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –≤–∞–º–∏ —Ç–æ–≤–∞—Ä—ã.\n\n"
            "‚ö° –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ..."
        )
        await callback.answer()

    async def help_callback(self, callback: CallbackQuery):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ü–æ–º–æ—â—å'"""
        help_text = (
            "üìñ <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:</b>\n\n"
            "üÜï <b>–°–æ–∑–¥–∞—Ç—å —Ç–æ–≤–∞—Ä</b> - –Ω–∞—á–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞\n"
            "üìã <b>–ú–æ–∏ —Ç–æ–≤–∞—Ä—ã</b> - –ø—Ä–æ—Å–º–æ—Ç—Ä —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤\n"
            "üì¶ <b>–ì–µ–Ω–µ—Ä–∞—Ü–∏—è XML</b> - —Å–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –¥–ª—è Avito\n\n"
            "üí° <b>–ü—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞:</b>\n"
            "1. –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é\n"
            "2. –î–æ–±–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ\n"
            "3. –£–∫–∞–∂–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã\n"
            "4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ\n"
            "5. –ü–æ–ª—É—á–∏—Ç–µ XML —Ñ–∞–π–ª\n\n"
            "‚ùì <b>–ü—Ä–æ–±–ª–µ–º—ã?</b> –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )

        await callback.message.edit_text(help_text)
        await callback.answer()

    async def help_command(self, message: Message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
        help_text = (
            "üìñ <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:</b>\n\n"
            "üÜï <b>/new_product</b> - —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä\n"
            "üìã <b>/my_products</b> - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ —Ç–æ–≤–∞—Ä—ã\n"
            "üì¶ <b>/generate_xml</b> - —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å XML –¥–ª—è Avito\n"
            "üÜò <b>/help</b> - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
            "‚ÑπÔ∏è <b>/about</b> - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ\n\n"
            "üí° <b>–ü—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞:</b>\n"
            "1. –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é\n"
            "2. –î–æ–±–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ\n"
            "3. –£–∫–∞–∂–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã\n"
            "4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ\n"
            "5. –ü–æ–ª—É—á–∏—Ç–µ XML —Ñ–∞–π–ª\n\n"
            "‚ùì <b>–ü—Ä–æ–±–ª–µ–º—ã?</b> –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )

        await message.answer(help_text)

    async def about_command(self, message: Message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /about"""
        about_text = (
            "ü§ñ <b>Avito Product Bot</b>\n\n"
            "üìä <b>–í–µ—Ä—Å–∏—è:</b> 2.0\n"
            "üîß <b>–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:</b> –í–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞\n"
            "üìÖ <b>–û–±–Ω–æ–≤–ª–µ–Ω–æ:</b> 2024\n\n"
            "‚ö° <b>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>\n"
            "‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è Avito\n"
            "‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏\n"
            "‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∏\n"
            "‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è XML –≤—ã–≥—Ä—É–∑–æ–∫\n\n"
            "üíé <b>–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</b>\n"
            "‚Ä¢ –ü—Ä–æ—Å—Ç–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å\n"
            "‚Ä¢ –ë—ã—Å—Ç—Ä–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–π\n"
            "‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤—Å–µ—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ Avito\n"
            "‚Ä¢ –ù–∞–¥–µ–∂–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö\n\n"
            "üìû <b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞:</b> @your_support"
        )

        await message.answer(about_text)