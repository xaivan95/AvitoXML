# bot/services/metro_service.py
from aiogram.types import Message
from aiogram.utils.keyboard import InlineKeyboardBuilder
from .metro_data import get_metro_cities, get_metro_stations, get_random_stations


class MetroService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–µ—Ç—Ä–æ"""

    @staticmethod
    async def ask_metro_city(message: Message, user_name: str = ""):
        """–ó–∞–ø—Ä–æ—Å –≤—ã–±–æ—Ä–∞ –≥–æ—Ä–æ–¥–∞ —Å –º–µ—Ç—Ä–æ"""
        metro_cities = get_metro_cities()

        if not metro_cities:
            await message.answer(
                "‚ùå –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –≥–æ—Ä–æ–¥–æ–≤ —Å –º–µ—Ç—Ä–æ.\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π —Ç–∏–ø —Ä–∞–∑–º–µ—â–µ–Ω–∏—è."
            )
            return

        builder = InlineKeyboardBuilder()

        for city in metro_cities:
            stations_count = len(get_metro_stations(city))
            builder.button(
                text=f"üöá {city} ({stations_count} —Å—Ç–∞–Ω—Ü–∏–π)",
                callback_data=f"metro_city_{city}"
            )

        builder.button(text="üîô –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É —Ç–∏–ø–∞", callback_data="back_to_placement_type")
        builder.adjust(1)

        greeting = f"{user_name}, " if user_name else ""
        await message.answer(
            f"{greeting}–≤—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ —Å –º–µ—Ç—Ä–æ:",
            reply_markup=builder.as_markup()
        )

    @staticmethod
    def get_metro_stations(city: str):
        """–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞–Ω—Ü–∏–∏ –º–µ—Ç—Ä–æ –¥–ª—è –≥–æ—Ä–æ–¥–∞"""
        return get_metro_stations(city)

    @staticmethod
    def get_random_stations(city: str, count: int):
        """–ü–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–µ —Å—Ç–∞–Ω—Ü–∏–∏ –º–µ—Ç—Ä–æ"""
        return get_random_stations(city, count)